server:
  port: 9001
  tomcat:
    # Property that defines a limit for how much time Tomcat should wait between accepting a TCP connection
    # from a client and actually receiving the HTTP request.
    connection-timeout: 2s
    # server.tomcat.keep-alive-timeout property to configure how long to keep a connection open
    # while waiting for new HTTP requests.
    keep-alive-timeout: 15s

    threads:
      # configure the maximum number of request processing threads
      max: 50
      # configure the minimum number of threads that should always be kept running
      min-spare: 5
spring:
  application:
    name: catalog-service
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000
      request-read-timeout: 5000
      fail-fast: true
      retry:
        max-attempts: 6
        initial-interval: 1000
        max-interval: 2000
        multiplier: 1.1
  profiles:
    active: testdata
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000
      maximum-pool-size: 5
#  sql:
#    init:
#      mode: always
management:
  endpoints:
    web:
      exposure:
        include: refresh
polar:
  greeting: Welcome to he local book catalog!